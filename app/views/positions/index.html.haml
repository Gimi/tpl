-#---------------------------------------- head
- content_for :head do
  = stylesheet_link_tag "positions/index"
  = link_jqueryui_stylesheet 'humanity'
  -# google_ajax_libs :jquery, :jqueryui
  -# javascript_include_tag 'positions/index'
  = smart_javascript_include_tag 'shared/state_form', :google => [:jqueryui]

-#---------------------------------------- sidebar
- position_form = capture do
  - form_for Position.new do |f|
    %fieldset
      %legend= t '.position_form_legend'
      .label
        = f.label :category_id, t('position.category')
        = link_to_icon 'action_add', t('.add_category'), new_category_path, :action_name => 'add-category'
      .input
        = f.select :category_id, @categories.map { |c| [c.name, c.id] }
      .label
        = f.label :name, t('position.name')
      .input
        = f.text_field :name
      .label
        = f.label :description,  t(:description)
      .input
        = f.text_area :description
      .label
        = f.label :need, t('position.need')
      .input
        = f.text_field :need
      .input
        = submit_tag t('save')
        %input.cancel{:type => "button", :value => t('cancel')}

- category_form = capture do
  - form_for Category.new do |f|
    %fieldset
      %legend= t '.category_form_legend'
      .label
        = f.label :name, t(:name)
      .input
        = f.text_field :name
      .label
        = f.label :description, t(:description)
      .input
        = f.text_area :description
      .input
        = submit_tag t('save')
        %input.cancel{:type => "button", :value => t('cancel')}

:ruby
  sidebar t('tools') => [
    [t('.add_position'), new_position_path, {id: 'tool-link-add-position'}],
    [position_form, {class: 'form', id: 'position-form'}],
    [category_form, {class: 'form', id: 'category-form'}]
  ]

-#---------------------------------------- content
%h2= t('.title')
#positions
  :ruby
    fold_positions = Configuration.group('Application').get('fold_positions', current_user.email)
    fold_link = link_to_icon(fold_positions ? 'maximize' : 'minimize', 'toggle', '#')
    profiles_css_class = fold_positions ? 'hidden' : ''
  - @positions.each do |position|
    .position{:id => "position-#{position.id}"}
      %h3
        = fold_link
        %span.info
          %span.name&= position.name
          \-
          %span.category&= position.category.name
          %span.state= " ( #{position.state} )"
        %ul.horizontal
          %li= link_to_icon 'folder_files', t('.details'), position_profiles_path(position), :action_name => 'show'
          %li= link_to_icon 'reply', t('.edit'), edit_position_path(position), :action_name => 'edit'
          %li= link_to_icon 'action_add', t('.add_profile'), new_position_profile_path(position), :action_name => 'add'
        .clear-float
      .profiles{:class => profiles_css_class}
        - if position.not_closed_profiles.blank?
          %p.notice= t '.no_profiles'
        - else
          %table
            %thead
              %tr
                %th= t :name
                %th= t :state
                %th= t 'profile.assign_to'
                %th= t :operations
            %tbody
              - position.not_closed_profiles.each_with_index do |profile, index|
                - break if index > 4
                %tr{:id => "profile-#{profile.id}"}
                  %td= link_to h(profile.display_name), profile_path(profile)
                  %td= profile.state
                  %td= assign_info(profile)
                  %td= link_to t(:change_state), shift_profile_path(:id => profile.id), :class => 'event'
  = will_paginate @positions
 
- if @positions.empty?
  %p.notice= t('.no_positions', :new_link => link_to(t(:here), new_position_path, id: 'tool-link-add-position-alt'))

-#-------------------------------- dialogs
= render :partial => 'shared/state_dialog'
= render :partial => 'edit_dialog'
